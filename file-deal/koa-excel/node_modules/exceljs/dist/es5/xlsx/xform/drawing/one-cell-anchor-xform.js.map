{"version":3,"sources":["../../../../../lib/xlsx/xform/drawing/one-cell-anchor-xform.js"],"names":["utils","require","BaseCellAnchorXform","StaticXform","CellPositionXform","ExtXform","PicXform","OneCellAnchorXform","map","tag","inherits","prepare","model","options","picture","render","xmlStream","openNode","editAs","range","tl","ext","closeNode","parseClose","name","parser","undefined","reconcile","medium","reconcilePicture","module","exports"],"mappings":"AAAA;;AAEA,IAAMA,QAAQC,QAAQ,sBAAR,CAAd;AACA,IAAMC,sBAAsBD,QAAQ,0BAAR,CAA5B;AACA,IAAME,cAAcF,QAAQ,iBAAR,CAApB;;AAEA,IAAMG,oBAAoBH,QAAQ,uBAAR,CAA1B;AACA,IAAMI,WAAWJ,QAAQ,aAAR,CAAjB;AACA,IAAMK,WAAWL,QAAQ,aAAR,CAAjB;;AAEA,IAAMM,qBAAqB,SAArBA,kBAAqB,GAAW;AACpC,OAAKC,GAAL,GAAW;AACT,gBAAY,IAAIJ,iBAAJ,CAAsB,EAAEK,KAAK,UAAP,EAAtB,CADH;AAET,eAAW,IAAIJ,QAAJ,CAAa,EAAEI,KAAK,SAAP,EAAb,CAFF;AAGT,eAAW,IAAIH,QAAJ,EAHF;AAIT,sBAAkB,IAAIH,WAAJ,CAAgB,EAAEM,KAAK,gBAAP,EAAhB;AAJT,GAAX;AAMD,CAPD;;AASAT,MAAMU,QAAN,CAAeH,kBAAf,EAAmCL,mBAAnC,EAAwD;AACtD,MAAIO,GAAJ,GAAU;AACR,WAAO,mBAAP;AACD,GAHqD;;AAKtDE,SALsD,mBAK9CC,KAL8C,EAKvCC,OALuC,EAK9B;AACtB,SAAKL,GAAL,CAAS,SAAT,EAAoBG,OAApB,CAA4BC,MAAME,OAAlC,EAA2CD,OAA3C;AACD,GAPqD;AAStDE,QATsD,kBAS/CC,SAT+C,EASpCJ,KAToC,EAS7B;AACvBI,cAAUC,QAAV,CAAmB,KAAKR,GAAxB,EAA6B,EAAES,QAAQN,MAAMO,KAAN,CAAYD,MAAZ,IAAsB,SAAhC,EAA7B;;AAEA,SAAKV,GAAL,CAAS,UAAT,EAAqBO,MAArB,CAA4BC,SAA5B,EAAuCJ,MAAMO,KAAN,CAAYC,EAAnD;AACA,SAAKZ,GAAL,CAAS,SAAT,EAAoBO,MAApB,CAA2BC,SAA3B,EAAsCJ,MAAMO,KAAN,CAAYE,GAAlD;AACA,SAAKb,GAAL,CAAS,SAAT,EAAoBO,MAApB,CAA2BC,SAA3B,EAAsCJ,MAAME,OAA5C;AACA,SAAKN,GAAL,CAAS,gBAAT,EAA2BO,MAA3B,CAAkCC,SAAlC,EAA6C,EAA7C;;AAEAA,cAAUM,SAAV;AACD,GAlBqD;AAoBtDC,YApBsD,sBAoB3CC,IApB2C,EAoBrC;AACf,QAAI,KAAKC,MAAT,EAAiB;AACf,UAAI,CAAC,KAAKA,MAAL,CAAYF,UAAZ,CAAuBC,IAAvB,CAAL,EAAmC;AACjC,aAAKC,MAAL,GAAcC,SAAd;AACD;AACD,aAAO,IAAP;AACD;AACD,YAAQF,IAAR;AACE,WAAK,KAAKf,GAAV;AACE,aAAKG,KAAL,CAAWO,KAAX,CAAiBC,EAAjB,GAAsB,KAAKZ,GAAL,CAAS,UAAT,EAAqBI,KAA3C;AACA,aAAKA,KAAL,CAAWO,KAAX,CAAiBE,GAAjB,GAAuB,KAAKb,GAAL,CAAS,SAAT,EAAoBI,KAA3C;AACA,aAAKA,KAAL,CAAWE,OAAX,GAAqB,KAAKN,GAAL,CAAS,SAAT,EAAoBI,KAAzC;AACA,eAAO,KAAP;AACF;AACE;AACA,eAAO,IAAP;AARJ;AAUD,GArCqD;AAuCtDe,WAvCsD,qBAuC5Cf,KAvC4C,EAuCrCC,OAvCqC,EAuC5B;AACxBD,UAAMgB,MAAN,GAAe,KAAKC,gBAAL,CAAsBjB,MAAME,OAA5B,EAAqCD,OAArC,CAAf;AACD;AAzCqD,CAAxD;;AA4CAiB,OAAOC,OAAP,GAAiBxB,kBAAjB","file":"one-cell-anchor-xform.js","sourcesContent":["'use strict';\n\nconst utils = require('../../../utils/utils');\nconst BaseCellAnchorXform = require('./base-cell-anchor-xform');\nconst StaticXform = require('../static-xform');\n\nconst CellPositionXform = require('./cell-position-xform');\nconst ExtXform = require('./ext-xform');\nconst PicXform = require('./pic-xform');\n\nconst OneCellAnchorXform = function() {\n  this.map = {\n    'xdr:from': new CellPositionXform({ tag: 'xdr:from' }),\n    'xdr:ext': new ExtXform({ tag: 'xdr:ext' }),\n    'xdr:pic': new PicXform(),\n    'xdr:clientData': new StaticXform({ tag: 'xdr:clientData' }),\n  };\n};\n\nutils.inherits(OneCellAnchorXform, BaseCellAnchorXform, {\n  get tag() {\n    return 'xdr:oneCellAnchor';\n  },\n\n  prepare(model, options) {\n    this.map['xdr:pic'].prepare(model.picture, options);\n  },\n\n  render(xmlStream, model) {\n    xmlStream.openNode(this.tag, { editAs: model.range.editAs || 'oneCell' });\n\n    this.map['xdr:from'].render(xmlStream, model.range.tl);\n    this.map['xdr:ext'].render(xmlStream, model.range.ext);\n    this.map['xdr:pic'].render(xmlStream, model.picture);\n    this.map['xdr:clientData'].render(xmlStream, {});\n\n    xmlStream.closeNode();\n  },\n\n  parseClose(name) {\n    if (this.parser) {\n      if (!this.parser.parseClose(name)) {\n        this.parser = undefined;\n      }\n      return true;\n    }\n    switch (name) {\n      case this.tag:\n        this.model.range.tl = this.map['xdr:from'].model;\n        this.model.range.ext = this.map['xdr:ext'].model;\n        this.model.picture = this.map['xdr:pic'].model;\n        return false;\n      default:\n        // could be some unrecognised tags\n        return true;\n    }\n  },\n\n  reconcile(model, options) {\n    model.medium = this.reconcilePicture(model.picture, options);\n  },\n});\n\nmodule.exports = OneCellAnchorXform;\n"]}